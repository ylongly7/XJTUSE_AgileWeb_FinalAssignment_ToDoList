{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","inputValue","list","class","href","type","id","value","this","onChange","handleInputChange","bind","placeholder","onClick","handleBtnClick","map","item","index","content","updateTrigger","time","handleItemDelete","style","display","handleItemUpdate","$","ajax","resbody","console","log","setState","err","status","responseText","e","target","JSON","stringify","val","attr","show","hide","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.597ffcbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from \"react\";\r\nimport logo from './logo.svg';\r\nimport $ from 'jquery'\r\nimport './App.css';\r\n\r\n// 目前仅支持bootstrap3    npm install bootstrap@3 --save\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\n\r\n// function App() {\r\n// \t//演示api\r\n// \tif (true) {\r\n// \t\t//全部todolist\r\n// \t\t$.ajax({\r\n// \t\t\t\"type\": 'GET',\r\n// \t\t\t\"url\": \"api/tasks\",\r\n// \t\t\t\"success\": (resbody) => {\r\n// \t\t\t\tconsole.log(resbody)\r\n// \t\t\t},\r\n// \t\t\t\"error\": (err) => {\r\n// \t\t\t\tconsole.log(err, err.status, err.responseText)\r\n// \t\t\t}\r\n// \t\t});\r\n// \t\t//添加todoitem 1586658034.2166107\r\n// \t\t/*  $.ajax(\r\n// \t\t  {\r\n// \t\t\t\"type\": 'POST',\r\n// \t\t\t\"url\":\"api/tasks\",\r\n// \t\t\t\"data\":JSON.stringify({\"content\":\"newItem\"}),\r\n// \t\t\t\"success\":(resbody)=>{\r\n// \t\t\t  console.log(resbody)\r\n// \t\t\t},\r\n// \t\t\t\"error\":(err)=>{\r\n// \t\t\t\tconsole.log(err,err.status,err.responseText)\r\n// \t\t\t}\r\n// \t\t  }\r\n// \t  ); */\r\n\r\n// \t\t//删除todoitem url格式：api/tasks/id\r\n// \t\t$.ajax({\r\n// \t\t\t\"type\": 'DELETE',\r\n// \t\t\t\"url\": \"api/tasks/\" + \"1586658034.2166107\",\r\n// \t\t\t\"success\": (resbody) => {\r\n// \t\t\t\tconsole.log(resbody)\r\n// \t\t\t},\r\n// \t\t\t\"error\": (err) => {\r\n// \t\t\t\tconsole.log(err, err.status, err.responseText)\r\n// \t\t\t}\r\n// \t\t});\r\n\r\n// \t\t//修改todoitem  \r\n// \t\t$.ajax({\r\n// \t\t\t\"type\": 'PUT',\r\n// \t\t\t\"url\": \"api/tasks/\",\r\n// \t\t\t\"data\": JSON.stringify({\r\n// \t\t\t\t\"content\": \"231232\",\r\n// \t\t\t\t\"id\": \"1586486287.794215\"\r\n// \t\t\t}),\r\n// \t\t\t\"success\": (resbody) => {\r\n// \t\t\t\tconsole.log(resbody)\r\n// \t\t\t},\r\n// \t\t\t\"error\": (err) => {\r\n// \t\t\t\tconsole.log(err, err.status, err.responseText)\r\n// \t\t\t}\r\n// \t\t});\r\n\r\n// \t}\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinputValue: \"\",\r\n\t\t\tlist: []\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div class=\"row clearfix\">\r\n\t\t\t\t\t<div class=\"col-md-12 column\">\r\n\t\t\t\t\t\t<div class=\"jumbotron\">\r\n\t\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t\tTodo List <small>- 巩效义 宋徐威 郭开阔</small>\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t敏捷web开发大作业：<a href=\"https://github.com/ylongly7/XJTUSE_AgileWeb_FinalAssignment_ToDoList\">Github</a>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"row clearfix\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-1 column\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-4 column\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><strong>新 建:</strong></span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id='todo-input'\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.inputValue}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)} placeholder=\" Todo List...\"></input>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-4 column\">\r\n\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" id=\"submitBtn\" onClick={this.handleBtnClick.bind(this)}>提 交</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-3 column\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t\t<table class=\"table table-hover\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\tID\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\tcontent\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\ttime\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{this.state.list.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={'content' + index} class=\"form-control\" placeholder={item.content}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.updateTrigger.bind(this, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.time}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" id={'delBtn' + index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleItemDelete.bind(this, item.id)}><strong>删 除</strong></button>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id={'updateBtn' + index} style={{ display: \"none\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleItemUpdate.bind(this, item.id, index)}><strong>提 交</strong></button>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n\r\n\t//页面加载完成时getdata\r\n\tcomponentDidMount() {\r\n\t\t$.ajax({\r\n\t\t\t\"type\": 'GET',\r\n\t\t\t\"url\": \"/api/tasks\",\r\n\t\t\t\"success\": (resbody) => {\r\n\t\t\t\tconsole.log(resbody)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlist: resbody\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\"error\": (err) => {\r\n\t\t\t\tconsole.log(err, err.status, err.responseText)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\t//改变数据，向input里面传入对象\r\n\t\tthis.setState({\r\n\t\t\tinputValue: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\t//add\r\n\thandleBtnClick() {\r\n\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\t\"type\": 'POST',\r\n\t\t\t\t\"url\": \"api/tasks\",\r\n\t\t\t\t\"data\": JSON.stringify({ \"content\": this.state.inputValue }),\r\n\t\t\t\t\"success\": (resbody) => {\r\n\t\t\t\t\tconsole.log(resbody)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tlist: resbody,\r\n\t\t\t\t\t\tinputValue: \"\"\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\t\"error\": (err) => {\r\n\t\t\t\t\tconsole.log(err, err.status, err.responseText)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tupdateTrigger(index, id) {\r\n\t\tif ($('#content' + index).val() !== $('#content' + index).attr(\"placeholder\")) {\r\n\t\t\t$('#updateBtn' + index).show();\r\n\t\t}\r\n\t\t// 检测有无修改\r\n\t\telse {\r\n\t\t\t$('#updateBtn' + index).hide();\r\n\t\t}\r\n\t}\r\n\r\n\t// Update\r\n\thandleItemUpdate(id, index) {\r\n\t\tconsole.log(\"put\");\r\n\t\t$.ajax({\r\n\t\t\t\"type\": 'PUT',\r\n\t\t\t\"url\": \"api/tasks/\",\r\n\t\t\t\"data\": JSON.stringify({\r\n\t\t\t\t\"content\": $('#content' + index).val(),\r\n\t\t\t\t\"id\": id\r\n\t\t\t}),\r\n\t\t\t\"success\": (resbody) => {\r\n\t\t\t\tconsole.log(resbody)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlist: resbody\r\n\t\t\t\t});\r\n\t\t\t\t$('#content' + index).val(\"\");\r\n\t\t\t\t$('#updateBtn' + index).hide();\r\n\t\t\t},\r\n\t\t\t\"error\": (err) => {\r\n\t\t\t\tconsole.log(err, err.status, err.responseText)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//del\r\n\thandleItemDelete(id) {\r\n\t\t$.ajax({\r\n\t\t\t\"type\": 'DELETE',\r\n\t\t\t\"url\": \"api/tasks/\" + id,\r\n\t\t\t\"success\": (resbody) => {\r\n\t\t\t\tconsole.log(resbody)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlist: resbody\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\"error\": (err) => {\r\n\t\t\t\tconsole.log(err, err.status, err.responseText)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}